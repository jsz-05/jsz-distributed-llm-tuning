import csv

# scrapy output with minimum temperature (randomness)
questions_answers = [
    ("What is a distributed system?", "A distributed system consists of a set of agents and channels where agents can send and receive messages over channels."),
    ("How is a channel represented in a distributed system model?", "A channel is directed from one agent to another, represented by an ordered pair (P, Q) where P is the sender and Q is the receiver."),
    ("What are the main components of an agent in a distributed system?", "An agent has two main parts: initialization of variables and output channels, and a callback function for receiving and processing messages."),
    ("How are messages communicated in channels within a distributed system?", "Messages are appended to the tail of the channel's queue when sent and removed from the head of the queue when received."),
    ("Can an agent refuse to receive a message in the model described?", "No, an agent cannot refuse to receive a message. If a channel is not empty, a message from the channel is delivered to the agent."),
    ("What is the state of a system in a distributed system model?", "The state of a system is given by the states of its agents and channels, represented as a tuple with elements for each agent and channel."),
    ("Describe the initial state of an output channel.", "The initial state of an output channel is an empty queue unless assigned a different value."),
    ("What happens when an agent receives a message in a distributed system?", "The message at the head of the input channel is removed, processed by the agent, and the receive function of the agent is called."),
    ("How does an agent send a message on a channel?", "An agent sends a message by executing a send function, placing the message in the output channel directed from the sender to the receiver."),
    ("What are some weaknesses of the simplistic model described?", "The model is static, does not handle faults, and only considers channels where messages are delivered in the order sent."),
    ("What is an example of a distributed system mentioned in the document?", "A banking information system that supports actions in ATM machines, branch offices, and fraud analysis centers."),
    ("How are agents and channels represented in a distributed system?", "Agents are represented as vertices, and channels are represented as edges in a directed graph."),
    ("What is the role of the receive function in an agent?", "The receive function processes messages received on an agent's input channels."),
    ("Can messages be lost or modified in the channels of the model?", "No, messages are not lost or modified in the channels. Every message sent is received."),
    ("What property ensures the order of message delivery in the system?", "The n-th message received on a channel is the n-th message sent on the channel, and messages are received in the order they are sent."),
    ("What does the state of an agent include?", "The state of an agent includes the values of its variables and its program counter."),
    ("What happens when an agent sends a message?", "The message is placed in the output channel directed from the sender to the receiver."),
    ("Why might the model use local output queues for agents?", "Local output queues are used to handle situations where channels have limited capacity and are full."),
    ("How can internal state transitions be represented in the model?", "Internal state transitions are represented by an agent sending a message to itself and processing it upon receipt."),
    ("What are the limitations of the model regarding agent creation and deletion?", "The model does not support dynamic creation and deletion of agents, but can represent finite changes by including idle agents."),
    ("What is the main focus of the distributed computing class?", "The class focuses on the principles and algorithms used in distributed systems."),
    ("What topics are covered in the distributed computing class?", "Topics include models of distributed systems, communication protocols, fault tolerance, and distributed algorithms."),
    ("What is the Advanced Message Queuing Protocol (AMQP)?", "AMQP is a protocol used for message-oriented middleware that enables reliable communication between distributed applications."),
    ("How are distributed algorithms implemented in the class?", "Distributed algorithms are implemented using Python and simulators, along with libraries like AMQP."),
    ("What is an example of a fault-tolerant system mentioned in the course?", "An earthquake monitoring system with thousands of sensors and agents carrying out complex calculations."),
    ("How does the course handle asynchronous communication in distributed systems?", "The course discusses models where messages are sent and received asynchronously without blocking."),
    ("What is a common challenge in distributed systems that the course addresses?", "Ensuring reliable message delivery and handling arbitrary message delays."),
    ("What is the significance of directed graphs in distributed systems?", "Directed graphs represent the network of agents and channels, showing how messages flow between agents."),
    ("How does the course approach the study of distributed systems?", "The course uses a combination of theoretical models and practical implementations to study distributed systems."),
    ("What role do Python simulators play in the course?", "Python simulators are used to demonstrate and test distributed algorithms in a controlled environment."),
    ("What is the purpose of a callback function in an agent?", "The callback function processes incoming messages and updates the agent's state."),
    ("What is a synchronous distributed system?", "A synchronous distributed system operates with a global clock, and all events are coordinated in time."),
    ("How does an asynchronous distributed system differ from a synchronous one?", "An asynchronous distributed system has no global clock and events are not coordinated in time."),
    ("What is a Byzantine fault?", "A Byzantine fault is a condition where a component, such as a server, provides misleading information or behaves erratically."),
    ("What are the characteristics of a reliable broadcast protocol?", "A reliable broadcast protocol ensures that all non-faulty processes receive the same messages in the same order."),
    ("How does the class address the issue of consensus in distributed systems?", "The class discusses algorithms like Paxos and Raft that help achieve consensus in distributed systems."),
    ("What is the role of a leader in a consensus algorithm?", "The leader coordinates the consensus process, proposing values and ensuring agreement among agents."),
    ("What is a quorum in the context of distributed systems?", "A quorum is a subset of agents that is sufficient to make decisions in a distributed system."),
    ("How do distributed systems handle network partitions?", "Distributed systems use protocols that allow for operation in the presence of network partitions, ensuring consistency and availability."),
    ("What is the CAP theorem?", "The CAP theorem states that a distributed system can provide at most two out of three guarantees: Consistency, Availability, and Partition tolerance."),
    ("How does eventual consistency differ from strong consistency?", "Eventual consistency ensures that all replicas will converge to the same value over time, whereas strong consistency ensures immediate consistency across replicas."),
    ("What is the role of middleware in distributed systems?", "Middleware provides common services and capabilities to applications in distributed systems, facilitating communication and management."),
    ("How does the class address security in distributed systems?", "The class covers security protocols, encryption, and authentication methods to protect data and ensure secure communication."),
    ("What is the importance of fault tolerance in distributed systems?", "Fault tolerance ensures that a distributed system can continue to operate correctly even in the presence of component failures."),
    ("How do distributed systems achieve scalability?", "Distributed systems achieve scalability by adding more nodes to handle increased load, using techniques like sharding and load balancing."),
    ("What is the purpose of a distributed hash table (DHT)?", "A distributed hash table (DHT) is used for decentralized data storage, providing efficient data retrieval and scalability."),
    ("What are the challenges of distributed data consistency?", "Challenges include ensuring all replicas have the same data, handling concurrent updates, and resolving conflicts."),
    ("How does the class address the issue of latency in distributed systems?", "The class discusses techniques to minimize latency, such as data locality, caching, and efficient communication protocols."),
    ("What is the role of a coordinator in a distributed transaction?", "The coordinator manages the transaction, ensuring all participants agree to commit or abort the transaction."),
    ("What is the two-phase commit protocol?", "The two-phase commit protocol is a consensus algorithm that ensures all participants in a transaction either commit or abort in a coordinated manner."),
    ("How do distributed systems handle node failures?", "Distributed systems use redundancy, replication, and fault-tolerant algorithms to handle node failures and maintain availability."),
    ("What is the significance of load balancing in distributed systems?", "Load balancing distributes workload evenly across nodes, ensuring efficient resource utilization and preventing overload."),
    ("How does the class address the issue of message ordering?", "The class covers protocols that ensure messages are delivered in the correct order, such as FIFO and causal ordering."),
    ("What is the purpose of a distributed ledger?", "A distributed ledger is a decentralized database that records transactions in a secure and tamper-evident manner, such as in blockchain technology."),
    ("What are the benefits of using microservices in distributed systems?", "Microservices allow for modular development, independent scaling, and easier maintenance of distributed applications."),
    ("How do distributed systems achieve high availability?", "High availability is achieved through redundancy, failover mechanisms, and distributed consensus protocols."),
    ("What is the role of a message broker in distributed systems?", "A message broker facilitates communication between distributed components by routing messages and ensuring reliable delivery."),
    ("How does the class address the issue of data replication?", "The class covers replication strategies, consistency models, and techniques to ensure data integrity across replicas."),
    ("What is the significance of the Paxos algorithm?", "The Paxos algorithm is a consensus protocol that ensures agreement among distributed agents despite failures."),
    ("How do distributed systems handle concurrency?", "Distributed systems handle concurrency using synchronization mechanisms, locks, and consensus algorithms to ensure correct operation."),
    ("What is the importance of monitoring in distributed systems?", "Monitoring helps detect failures, optimize performance, and ensure the correct operation of distributed systems."),

    ("How does the Chandy-Lamport algorithm capture a global snapshot in a distributed system?", "The Chandy-Lamport algorithm captures a global snapshot by having processes record their local state and the state of incoming channels when they receive a marker message."),
    ("What is the primary difference between linearizability and sequential consistency in distributed systems?", "Linearizability ensures that all operations appear to occur instantaneously at some point between their invocation and their response, while sequential consistency ensures that operations are consistent with some sequential order."),
    ("How does vector clock help in resolving conflicts in a distributed system?", "Vector clocks help in resolving conflicts by providing a way to capture causality between events, allowing the system to determine if events are concurrent or if one happened before another."),
    ("What is the significance of Lamport timestamps in event ordering?", "Lamport timestamps provide a way to order events in a distributed system, ensuring that if one event causally precedes another, the timestamp of the first event is less than the timestamp of the second."),
    ("How does the Bully algorithm elect a coordinator in a distributed system?", "The Bully algorithm elects a coordinator by having the process with the highest identifier take over as coordinator after it confirms that no higher identifier process is active."),
    ("Explain the role of the Omega failure detector in consensus algorithms.", "The Omega failure detector provides information about which processes are suspected to have crashed, helping consensus algorithms like Paxos make progress by avoiding suspected faulty processes."),
    ("How does the Paxos algorithm handle proposer and acceptor roles?", "In Paxos, proposers suggest values to be agreed upon, and acceptors decide on these values by responding to proposals and keeping track of the highest-numbered proposal they have accepted."),
    ("What is the function of a learner in the Paxos algorithm?", "A learner in Paxos learns the chosen value once consensus is reached among a majority of acceptors, ensuring that the decision is disseminated to all relevant processes."),
    ("How does Raft ensure log consistency among replicated state machines?", "Raft ensures log consistency by having the leader replicate its log entries to followers and requiring a majority of followers to acknowledge the entries before they are committed."),
    ("Describe the term 'split-brain' scenario in distributed databases.", "A split-brain scenario occurs when a network partition causes a distributed database to split into two disjoint sets of nodes, each believing it is the primary set, leading to data inconsistencies."),
    ("How does quorum-based replication handle read and write requests?", "Quorum-based replication handles read and write requests by requiring a majority of replicas (quorum) to agree on the operation, ensuring consistency and fault tolerance."),
    ("What is the difference between primary-backup and multi-primary replication strategies?", "In primary-backup replication, one node is the primary and handles all write requests, while backups handle reads. In multi-primary replication, multiple nodes can handle write requests simultaneously."),
    ("Explain how consistent hashing is used in distributed storage systems.", "Consistent hashing distributes data across nodes in a way that minimizes reorganization when nodes join or leave the system, ensuring a balanced distribution of data."),
    ("What is the role of the gossip protocol in maintaining system state?", "The gossip protocol helps maintain system state by periodically sharing state information with randomly selected peers, ensuring eventual consistency across the distributed system."),
    ("How does the CAP theorem apply to NoSQL databases?", "The CAP theorem states that a distributed system can only provide two out of three guarantees: Consistency, Availability, and Partition tolerance. NoSQL databases often prioritize availability and partition tolerance over consistency."),
    ("How do Merkle trees help in verifying data integrity in distributed systems?", "Merkle trees allow efficient and secure verification of data integrity by using hash functions to create a tree of hashes, where each leaf node is a hash of a data block, and internal nodes are hashes of their children."),
    ("What is the significance of two-phase commit in distributed transactions?", "Two-phase commit ensures that a distributed transaction is either committed or aborted across all participating nodes, preventing partial commits and ensuring atomicity."),
    ("How does the Byzantine Fault Tolerance (BFT) protocol handle malicious actors?", "BFT protocols use a consensus mechanism that can tolerate a certain number of faulty or malicious nodes, ensuring that the correct decision is made even in the presence of Byzantine faults."),
    ("Explain the concept of eventual consistency in distributed systems.", "Eventual consistency ensures that all replicas of a distributed database will converge to the same value over time, provided that no new updates are made."),
    ("How does the lease mechanism help in maintaining consistency?", "A lease mechanism grants a node exclusive rights to perform certain operations for a limited period, ensuring consistency by preventing conflicting operations during the lease term."),
    ("What is the role of a coordinator in distributed locking?", "A coordinator in distributed locking manages the locks for shared resources, ensuring mutual exclusion and preventing race conditions."),
    ("How do leader election algorithms ensure fault tolerance?", "Leader election algorithms ensure fault tolerance by selecting a new leader when the current leader fails, allowing the system to continue operating without interruption."),
    ("What is the importance of logical clocks in distributed systems?", "Logical clocks help order events in a distributed system without relying on synchronized physical clocks, ensuring causal relationships between events are maintained."),
    ("How does the Kademlia protocol work in peer-to-peer networks?", "The Kademlia protocol uses a XOR metric to define the distance between nodes and data keys, allowing efficient routing and data lookup in a peer-to-peer network."),
    ("Explain the purpose of a consensus algorithm in blockchain technology.", "A consensus algorithm in blockchain technology ensures that all participants agree on the order and validity of transactions, maintaining a consistent and tamper-proof ledger."),
    ("How do replicated state machines achieve fault tolerance?", "Replicated state machines achieve fault tolerance by replicating the same state across multiple nodes, ensuring that the system can continue operating correctly even if some nodes fail."),
    ("What is the role of a sequencer in total order broadcast?", "A sequencer assigns sequence numbers to messages, ensuring that all nodes process messages in the same order, achieving total order broadcast."),
    ("How does the Zookeeper service ensure coordination in distributed applications?", "Zookeeper provides distributed coordination by maintaining configuration information, naming, synchronization, and group services, ensuring consistency and coordination among distributed applications."),
    ("What is the significance of the FLP impossibility result in distributed systems?", "The FLP impossibility result states that in an asynchronous distributed system, it is impossible to achieve consensus if even a single process can fail, highlighting the challenges of achieving fault-tolerant consensus."),
    ("How does the Raft consensus algorithm handle leader election?", "Raft handles leader election by having nodes vote for a leader in terms called election terms, with a majority vote required to elect a leader and ensure system progress."),
    ("What is the purpose of the two-phase locking protocol in distributed databases?", "The two-phase locking protocol ensures serializability in distributed databases by dividing the transaction execution into two phases: the growing phase, where locks are acquired, and the shrinking phase, where locks are released."),
    ("Explain the role of the DHT (Distributed Hash Table) in decentralized networks.", "A DHT provides a decentralized storage system that allows for efficient data lookup and storage by distributing data across a network of nodes based on consistent hashing."),
    ("How does the Gossip-based failure detection mechanism work?", "Gossip-based failure detection works by having nodes periodically exchange information about their state with random peers, propagating failure information throughout the system to detect node failures."),
    ("What is the function of a coordinator in the 2PC (Two-Phase Commit) protocol?", "The coordinator in the 2PC protocol manages the commit process by first sending a prepare message to participants and then sending a commit or abort message based on their responses."),
    ("How does the Paxos algorithm achieve consensus in the presence of failures?", "Paxos achieves consensus by requiring a majority of acceptors to agree on a value, ensuring that the system can reach consensus even if some acceptors fail."),
    ("What is the purpose of the Gossip protocol in Cassandra?", "The Gossip protocol in Cassandra is used to disseminate state information among nodes, ensuring that all nodes have up-to-date information about the cluster's topology and health."),
    ("How does the RAFT consensus algorithm handle log replication?", "RAFT handles log replication by having the leader replicate log entries to followers and ensuring that a majority of followers acknowledge the entries before they are committed."),
    ("Explain the concept of quorum in the context of distributed systems.", "A quorum is a subset of nodes in a distributed system that must agree on an operation to ensure consistency and fault tolerance, typically requiring a majority of nodes."),
    ("What is the significance of the Lamport's bakery algorithm in distributed systems?", "Lamport's bakery algorithm ensures mutual exclusion in a distributed system by assigning numbers to processes, allowing them to enter the critical section in order."),
    ("How does the MapReduce framework handle fault tolerance?", "MapReduce handles fault tolerance by dividing tasks into smaller sub-tasks, allowing failed tasks to be re-executed on different nodes without affecting the overall job."),
    ("What is the role of a master node in the Hadoop Distributed File System (HDFS)?", "The master node, or NameNode, in HDFS manages the file system metadata and namespace, coordinating file operations and ensuring data consistency across the cluster."),
    ("How does the Chord protocol handle data lookup in a peer-to-peer network?", "The Chord protocol uses consistent hashing to assign keys to nodes, allowing for efficient data lookup and routing by following a structured overlay network."),
    ("Explain the purpose of the Paxos leader election process.", "The Paxos leader election process ensures that a single node becomes the leader, coordinating the consensus process and preventing conflicting decisions."),
# 1, 6 8
    ("Which agent starts a global snapshot algorithm?", "The algorithm can be started by any one or more agents."),
    ("Can the snapshot algorithm be used to record the states of a subset of agents?", "Yes, the snapshot algorithm can record the states of a connected subset of agents."),
    ("Is 'every message received in past is sent in past' equivalent to 'every message sent in future is received in future'?", "Yes."),
    ("What is a cut of a dataflow graph?", "A cut of a dataflow graph is a partition of the set of vertices of the graph into subsets past and future such that all steps before past steps are past steps."),
    ("How is the state of the system at a cut specified?", "The state of the system at a cut is specified by the labels of edges from past to future."),
    ("What does the state S* represent in a dataflow graph?", "The state S* is the final state of the sub-dataflow of past steps and the initial state of the sub-dataflow of future steps."),
    ("What are the two conditions for a cut (past, future) to exist based on message counts?", "1. Every message received in past is sent in past. 2. If a step of an agent is in past, then steps at that agent before it are also in past."),
    ("What is the importance of cuts in deadlock detection?", "Cuts are central to understanding detection algorithms such as deadlock detection and global snapshot algorithms."),
    ("How do computations through increasing cuts work?", "There exists a computation that visits states in increasing order of cuts."),
    ("What is the relationship between cuts and the concept of time in dataflow?", "Cuts separate past from future, embodying the only notions of time -- past and future -- in dataflow."),
    ("What is the primary concept of time in dataflow graphs?", "The primary concept of time in dataflow graphs is that of before and after."),
    ("How is a vertex defined as being before another vertex in a dataflow graph?", "A vertex is before another vertex if there is a path from the former to the latter."),
    ("What is the role of cuts in termination detection algorithms?", "Cuts are used in termination detection to ensure that computations are properly separated into past and future."),
    ("What do the labels on edges from past to future in a dataflow graph represent?", "The labels represent the state of the system at the cut, indicating the transitions from past to future."),
    ("How do cuts of a dataflow graph relate to general graph cuts?", "A cut of a dataflow graph is an instance of the general cut of a graph, specifically a cut of a flow network."),
    ("What does the term 'past steps before future steps' imply in a dataflow graph?", "It implies that all steps in the past subset are executed before any steps in the future subset."),
    ("How does a cut based on message receipt ensure consistency?", "It ensures that every message received in the past was sent in the past, maintaining a consistent state transition."),
    ("What are the properties of cuts in dataflow graphs?", "1. Dataflows of past steps before future steps. 2. Computations of past before future."),
    ("What does the term 'cut based on counts of messages' refer to?", "It refers to ensuring that the number of messages sent and received across a cut are balanced for consistent state detection."),
    ("How do global snapshot algorithms utilize cuts?", "Global snapshot algorithms use cuts to determine the states of distributed systems by partitioning steps into past and future."),

    #combined:
    ("What is the Distributed Dining Philosophers Problem?", "It is a distributed mutual exclusion problem where agents must manage conflicts to ensure that only one agent can execute a critical section at a time."),
    ("What is mutual exclusion in distributed systems?", "Mutual exclusion ensures that only one agent can carry out a critical section of a program at a time."),
    ("How do priorities among agents help in conflict resolution?", "Agents agree on relative priorities, and the agent with higher priority wins the conflict."),
    ("What role do tokens play in distributed algorithms?", "Tokens are used to indicate the state of an agent. Holding a token implies exclusive access to a critical section."),
    ("What is a global snapshot?", "A global snapshot is a recorded state of the system during its computation, used to analyze distributed systems."),
    ("What is the purpose of a cut in global snapshot algorithms?", "Cuts partition steps into past and future to help in determining the states of distributed systems."),
    ("What is the meaning of 'cut based on counts of messages'?", "It ensures that the number of messages sent and received across a cut are balanced for consistent state detection."),
    ("How does the dining philosophers problem relate to mutual exclusion?", "The states 'Thinking', 'Hungry', and 'Eating' in the dining philosophers problem correspond to 'Outside critical section', 'Waiting to enter critical section', and 'In critical section' in mutual exclusion."),
    ("What are the three states in a mutual exclusion problem?", "The states are: Outside critical section, Waiting to enter critical section, and In critical section."),
    ("How is the communication structure among agents represented?", "It is represented by an undirected graph where nodes are agents and edges represent bidirectional channels."),
    ("What happens when an agent transits from thinking to hungry?", "If a philosopher of higher priority transits from thinking to hungry, it may request forks from its neighbors, potentially changing the variant function."),
    ("What does it mean for a global state to be 'recorded'?", "It means capturing the system's state at a particular point in its computation for analysis."),
    ("How does an agent's state affect its transitions in a mutual exclusion problem?", "An agent's state determines its transitions, such as moving from waiting to enter a critical section to being in the critical section when granted permission."),
    ("What ensures that all agents eventually win conflicts?", "A good-neighbor policy ensures that winning agents lower their priority, allowing others to eventually win."),
    ("What invariant helps in designing mutual exclusion algorithms?", "The invariant that each token is in exactly one place: either with an agent or in a channel."),
    ("What is the role of the operating system in mutual exclusion?", "The operating system grants permission for agents to enter their critical sections."),
    ("What is a computation in the context of global snapshots?", "A computation is a sequence of steps executed by agents in the system."),
    ("How are steps in past and future defined in a cut?", "All steps in the past are executed before any steps in the future."),
    ("What is a cut based on the condition 'message is received only after it is sent'?", "It ensures that all messages received in the past were sent in the past, maintaining a logical order."),
    ("How does an initiator detect the number of tokens in a system?", "The initiator takes a global snapshot and then acquires it, counting the tokens held by agents and those in transit."),
    ("What happens when an agent receives a request for a fork from a higher priority neighbor?", "The agent either sends the fork or transitions from thinking to hungry, which may decrease the variant function."),
    ("What does 'good-neighbor policy' imply in distributed algorithms?", "A winning agent lowers its priority compared to all agents it competes with, ensuring fairness."),
    ("What is the significance of lexicographic ordering in conflict resolution?", "It ensures that the variant function decreases when higher-priority philosophers transition from thinking to hungry or eating."),
    ("How does the variant function help in proving progress?", "It is used to show that a system eventually reaches a desired state, ensuring that agents progress through their states."),
    ("What is the key idea behind the good-neighbor policy?", "It ensures that every agent gets a chance to win conflicts by lowering the priority of winning agents."),
    ("What is the role of the operating system in transitions within mutual exclusion?", "The operating system grants or denies permission for agents to enter critical sections based on mutual exclusion rules."),
    ("What is an example of a change to the variant function?", "When an agent eats, the priority graph and variant function are updated to reflect the new state."),
    ("How does a global snapshot algorithm operate?", "It records the state of each agent and channel at a specific point during the system's computation."),
    ("What does it mean for a message to be in transit in a channel?", "It means the message has been sent by one agent but not yet received by another."),
    ("How do agents determine their transitions in mutual exclusion?", "Clients determine transitions to waiting and from critical sections, while the operating system controls entry into critical sections."),
    ("What is the importance of the invariant regarding tokens?", "It ensures that the system can account for every token, helping in conflict resolution and mutual exclusion."),
    ("How do higher priority philosophers affect the variant function?", "Their transitions from thinking to hungry or eating can decrease the variant function, ensuring progress."),
    ("What is the meaning of 'thinking' in the dining philosophers problem?", "It corresponds to the 'Outside critical section' state in mutual exclusion."),
    ("What is the meaning of 'hungry' in the dining philosophers problem?", "It corresponds to the 'Waiting to enter critical section' state in mutual exclusion."),
    ("What is the meaning of 'eating' in the dining philosophers problem?", "It corresponds to the 'In critical section' state in mutual exclusion."),
    ("How does the dining philosophers problem ensure no starvation?", "The algorithm ensures that every hungry philosopher eventually gets to eat."),
    ("What is the role of a token in conflict resolution?", "It indicates exclusive access to a resource or critical section, preventing conflicts."),
    ("What is the importance of the communication structure among agents?", "It defines how agents interact and exchange messages, crucial for coordinating actions in a distributed system."),
    ("How does a global snapshot help in analyzing distributed systems?", "It captures a consistent state of the system for analysis, helping in debugging and verifying algorithms."),
    ("What is the significance of a cut in distributed algorithms?", "A cut helps to partition steps into past and future, maintaining a consistent view of the system's state."),
    ("What is the impact of a philosopher transitioning to 'hungry'?", "It may request resources from neighbors, potentially changing the system's state and variant function."),
    ("How does the good-neighbor policy maintain fairness?", "By ensuring that a winning agent lowers its priority, allowing other agents to eventually win conflicts."),
    ("What is the consequence of a token being in transit?", "It means that the token is moving between agents, affecting the state and progress of the system."),
    ("How does a global snapshot algorithm ensure consistency?", "By capturing the states of all agents and channels at a specific point, ensuring a coherent view of the system."),
    ("What is the relationship between agent states and mutual exclusion?", "Agent states determine their ability to enter critical sections, ensuring no two agents are in the critical section simultaneously."),
    ("What is the role of lexicographic ordering in the variant function?", "It ensures that transitions maintain a decreasing order, proving progress and preventing deadlock."),
    ("How does the dining philosophers problem illustrate mutual exclusion?", "It models the need for exclusive access to resources, preventing simultaneous use by multiple agents."),
    ("What does it mean for an agent to be 'outside critical section'?", "The agent is not attempting to enter or execute within its critical section."),
    ("What ensures that every agent gets a chance to win conflicts?", "The good-neighbor policy ensures that a winning agent lowers its priority, giving others a chance to win."),
    ("What is the effect of a higher priority neighbor transitioning to 'hungry'?", "It can cause the variant function to decrease, affecting the state and fairness of the system."),
    ("How does the operating system control mutual exclusion?", "By granting or denying access to critical sections based on system rules."),
    ("What is the significance of the invariant regarding token locations?", "It helps in tracking and resolving conflicts, ensuring mutual exclusion and progress."),
    ("What is a global state in distributed systems?", "A global state is the combined state of all agents and channels in the system at a particular point in time."),
    ("How do agents communicate in the dining philosophers problem?", "Through an undirected graph representing bidirectional channels between nodes (agents)."),
    ("What is the impact of the variant function in conflict resolution?", "It helps to prove that the system progresses towards a desired state, ensuring no agent is indefinitely delayed."),
    ("What is the significance of a token in distributed systems?", "It represents exclusive access, ensuring no two agents simultaneously access the same resource."),
    ("How does the global snapshot algorithm record system states?", "By capturing the states of agents and channels, providing a snapshot of the entire system at a point in time."),
    ("What does 'waiting to enter critical section' mean for an agent?", "The agent is waiting for permission to enter its critical section and execute its critical task."),
    ("How does the good-neighbor policy solve conflict resolution?", "By lowering the priority of winning agents, it ensures that all agents eventually get a chance to win."),
    ("What is the purpose of a global snapshot?", "To capture a consistent view of the system's state for analysis, debugging, and verification."),
    ("How do agent transitions affect mutual exclusion?", "Transitions determine when agents can enter or exit critical sections, maintaining exclusive access."),
    ("What is the role of the operating system in agent transitions?", "It grants or denies permission for agents to enter critical sections, controlling mutual exclusion."),
    ("What is a computation in distributed systems?", "A sequence of steps executed by agents, leading to transitions in their states."),
    ("How does a cut help in global snapshot algorithms?", "It partitions steps into past and future, helping to determine consistent states across the system."),
    ("What does 'in critical section' mean for an agent?", "The agent is currently executing its critical task with exclusive access."),
    ("How does the good-neighbor policy ensure system fairness?", "By lowering the priority of winning agents, it ensures that all agents get a fair chance to win conflicts."),
    ("What is the significance of a token being in transit?", "It indicates that the token is moving between agents, affecting the system's state and progress."),
    ("How does the variant function help in proving system progress?", "By showing that the system eventually reaches a desired state, ensuring that agents are not indefinitely delayed."),
    ("What is the meaning of 'thinking' for a philosopher?", "The philosopher is not attempting to eat, corresponding to being outside the critical section in mutual exclusion."),
    ("How does the communication structure impact distributed algorithms?", "It defines how agents interact and exchange messages, crucial for coordinating actions."),
    ("What is the effect of a higher priority agent becoming 'hungry'?", "It may request resources, changing the system's state and variant function."),
    ("How does a global snapshot ensure consistency?", "By capturing the states of all agents and channels at a specific point, providing a coherent view."),
    ("What is the relationship between agent states and mutual exclusion?", "Agent states determine their transitions and ability to enter critical sections."),
    ("How does lexicographic ordering affect the variant function?", "It maintains a decreasing order, proving system progress and preventing deadlock."),
    ("What does 'outside critical section' mean for an agent?", "The agent is not attempting to enter or execute within its critical section."),
    ("How does the good-neighbor policy maintain fairness in conflicts?", "By lowering the priority of winning agents, ensuring all agents get a chance to win."),
    ("What is the impact of a higher priority agent transitioning to 'hungry'?", "It decreases the variant function, affecting system state and fairness."),
    ("What is the role of the operating system in mutual exclusion?", "Granting or denying access to critical sections based on system rules."),
    ("What is the importance of tracking token locations?", "It ensures mutual exclusion and helps in conflict resolution by accounting for all tokens."),
    ("What is a global state?", "The combined state of all agents and channels at a particular point in time."),
    ("How do agents communicate in the dining philosophers problem?", "Through an undirected graph representing bidirectional channels."),
    ("What is the role of the variant function in conflict resolution?", "Proving system progress by showing a decrease in the variant function."),
    ("How does a global snapshot algorithm record states?", "Capturing the states of agents and channels at a point in time."),
    ("What does 'waiting to enter critical section' mean?", "The agent is waiting for permission to execute its critical task."),
    ("How does the good-neighbor policy solve conflicts?", "By ensuring that winning agents lower their priority."),
    ("What is the purpose of capturing a global snapshot?", "To analyze and verify the system's state."),
    ("How do transitions affect mutual exclusion?", "Determining when agents can enter or exit critical sections."),
    ("What is the role of the operating system in agent transitions?", "Controlling access to critical sections."),
    ("What is a computation?", "A sequence of steps by agents leading to state transitions."),
    ("How does a cut help in global snapshots?", "Partitioning steps to determine consistent states."),
    ("What does 'in critical section' mean?", "The agent is executing its critical task with exclusive access."),
    ("How does the good-neighbor policy ensure fairness?", "Ensuring all agents get a fair chance to win conflicts."),
    ("What is the significance of a token in transit?", "It indicates movement between agents, affecting state and progress."),
    ("How does the variant function help prove progress?", "Showing eventual desired state achievement."),
    ("What is 'thinking' in the dining philosophers problem?", "Not attempting to eat, analogous to being outside critical section."),
    ("How does communication structure impact algorithms?", "Defining interactions and message exchanges among agents."),
]


filename = 'distributed_simple.csv'

with open(filename, 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['Question', 'Answer'])
    writer.writerows(questions_answers)

print(f"Data exported to {filename}")